Version 1
---------

Create a user model and add phpunit testing code

First Commit: 21307a61a699dcc8b9b8beeffa62adce187a6046
Last Commit: 047dce122bf5d1a56cd407b35050303e3799e996

protected/config/main.php  -- Added database login credientals. This file is used by the web application
protected/config/console.php  -- Added database login credientals. This file is used whenever you run a migration from the commandline
protected/config/test.php  -- Added database login credientals. This file modifies main.php whenever phpunit is run
protected/migrate_all.sh -- Shell script to migrate main and test db

/var/www/Yii-Tutorial/protected$ ./yiic migrate create create_user_table

Yii Migration Tool v1.0 (based on Yii v1.1.13)

Create new migration '/var/www/Yii-Tutorial/protected/migrations/m130128_204446_create_user_table.php'? (yes|no) [no]:yes
New migration created successfully.


protected/runtime/gii-1.1.13/ModelCode.php -- I think this is a file that should be included in .gitignore.... not sure though
protected/models/User.php -- File generated by Gii. Goto this url 'http://localhost/Yii-Tutorial/index.php?r=gii/model' to generate this. The password is 'password', fill in 'user' for Table name, click preview, then generate.
protected/test/unit/user_model.php -- Added tests to ensure the model checks for password matching. Also added tests to ensure clear text passwords are not stored in the database, and removed from memory after they are saved
protected/test/unit/user_model.php -- Added tests to ensure the hashed password matches the original password when compared
protected/test/unit/user_model.php -- Refactored and corrected errors in the test.

protected/migrations/m130129_000236_increase_user_password_length.php -- Increased the password size to 60. All password hashes are 60 characters
protected/models/User.php -- Added code to verify the password was 60 characters long. This should probably be removed as it may cause problems in the views
												  -- Also added code to turn the password into a hash and a function to compare a password against the hash
protected/extensions/Bcrypt.php -- Code to turn a password into a hash. I found this online and copied it without modification
protected/config/main.php -- Added a line that will search the extension directory for helper classes, this allows us to use the bcrypt class
protected/redo_migrations.sh -- Script file to automate redoing migrations for all databases


Version 2
---------

Create Administrative Section with User CRUD and ruby acceptance testing. I have tried to work with phpunit for acceptance testing, but it constantly crashes whereas ruby works right out of the box.
Make sure you have ruby installed, preferably with rvm, move into the test directory, and then type 'bundle'. You may need to run 'gem install bundler' first. After that you should have everything installed.
Simply run rspec spec/test_spec.rb from the tests directory to run the tests. The last test is the only one that should fail.

protected/tests/functional/SiteTest.php -- I deleted this as we will not be using phpunit for acceptance testing. This file seems to show how to do this effectively though if you are interested
protected/tests/Gemfile -- This contains a list of dependancies for the ruby code.
protected/tests/Gemfile.lock -- Also contains dependancies. Ignore this file
protected/tests/spec/spec_helper.rb -- Contains code and variables needed for everytest
protected/tests/spec/test_spec.rb -- A basic test that makes sure the application works
